diff --git a/node_modules/nextron/bin/nextron-build.js b/node_modules/nextron/bin/nextron-build.js
index f11dab7..d4adb21 100644
--- a/node_modules/nextron/bin/nextron-build.js
+++ b/node_modules/nextron/bin/nextron-build.js
@@ -1,5 +1,5 @@
 #!/usr/bin/env node
-"use strict";var e=require("fs-extra"),i=require("path"),n=require("arg"),r=require("chalk"),o=require("execa"),a=require("fs");const s=e=>{console.log(r`{cyan [nextron]} ${e}`)},l=n({"--mac":Boolean,"--linux":Boolean,"--win":Boolean,"--x64":Boolean,"--ia32":Boolean,"--armv7l":Boolean,"--arm64":Boolean,"--universal":Boolean,"--config":String,"--publish":String,"--no-pack":Boolean}),c=process.cwd(),u=i.join(c,"app"),t=i.join(c,"dist"),p=(()=>{const e=i.join(process.cwd(),"nextron.config.js");return a.existsSync(e)?require(e):{}})().rendererSrcDir||"renderer",d={cwd:c,stdio:"inherit"};(async()=>{process.env.ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES="true";try{s("Clearing previous builds"),await Promise.all([e.remove(u),e.remove(t)]),s("Building renderer process"),await o("next",["build",i.join(c,p)],d),await o("next",["export","-o",u,i.join(c,p)],d),s("Building main process"),await o("node",[i.join(__dirname,"webpack.config.js")],d),l["--no-pack"]?s("Skip packaging..."):(s("Packaging - please wait a moment"),await o("electron-builder",function(){const e=[];l["--config"]&&(e.push("--config"),e.push(l["--config"]||"electron-builder.yml"));l["--publish"]&&(e.push("--publish"),e.push(l["--publish"]));return l["--mac"]&&e.push("--mac"),l["--linux"]&&e.push("--linux"),l["--win"]&&e.push("--win"),l["--x64"]&&e.push("--x64"),l["--ia32"]&&e.push("--ia32"),l["--armv7l"]&&e.push("--armv7l"),l["--arm64"]&&e.push("--arm64"),l["--universal"]&&e.push("--universal"),e}(),d)),s("See `dist` directory")}catch(e){console.log(r`
+"use strict";var e=require("fs-extra"),i=require("path"),n=require("arg"),r=require("chalk"),o=require("execa"),a=require("fs");const s=e=>{console.log(r`{cyan [nextron]} ${e}`)},l=n({"--mac":Boolean,"--linux":Boolean,"--win":Boolean,"--x64":Boolean,"--ia32":Boolean,"--armv7l":Boolean,"--arm64":Boolean,"--universal":Boolean,"--config":String,"--publish":String,"--no-pack":Boolean}),c=process.cwd(),u=i.join(c,"app"),t=i.join(c,"dist"),p=(()=>{const e=i.join(process.cwd(),"nextron.config.js");return a.existsSync(e)?require(e):{}})().rendererSrcDir||"renderer",d={cwd:c,stdio:"inherit"};(async()=>{process.env.ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES="true";try{s("Clearing previous builds"),await Promise.all([e.remove(u),e.remove(t)]),s("Building renderer process"),await o("next",["build",i.join(c,p)],d),await o("npx",["cross-env", "NEXTRON_OUTPUT=" + u, "next", "build", i.join(c,p)],d),s("Building main process"),await o("node",[i.join(__dirname,"webpack.config.js")],d),l["--no-pack"]?s("Skip packaging..."):(s("Packaging - please wait a moment"),await o("electron-builder",function(){const e=[];l["--config"]&&(e.push("--config"),e.push(l["--config"]||"electron-builder.yml"));l["--publish"]&&(e.push("--publish"),e.push(l["--publish"]));return l["--mac"]&&e.push("--mac"),l["--linux"]&&e.push("--linux"),l["--win"]&&e.push("--win"),l["--x64"]&&e.push("--x64"),l["--ia32"]&&e.push("--ia32"),l["--armv7l"]&&e.push("--armv7l"),l["--arm64"]&&e.push("--arm64"),l["--universal"]&&e.push("--universal"),e}(),d)),s("See `dist` directory")}catch(e){console.log(r`
 
 {bold.red Cannot build electron packages:}
 {bold.yellow ${e}}
